input {
  pipeline { address => "workflow_run" }
}
filter {
  if [headers][x-github-event] != "workflow_run" { 
    drop { }
  }
  if [action] == "completed" { 
    ruby {
      code => "
        completed_at = (Time.parse(event.get('[workflow_run][updated_at]')).to_f).floor
        created_at = (Time.parse(event.get('[workflow_run][created_at]')).to_f).floor
        started_at = (Time.parse(event.get('[workflow_run][run_started_at]')).to_f).floor
        event.set('total_duration', completed_at - created_at)
        event.set('execution_duration', completed_at - started_at)
      "
    }
    mutate {
      copy => {
        "[workflow_run][updated_at]" => "completed_at"
      }
    }
  }
  mutate {
    copy => {
      "[repository][owner][login]" => "owner"
      "[repository][name]" => "repo"
      "[workflow][id]" => "workflow_id"
      "[workflow][name]" => "name"
      "[workflow][path]" => "path"
      "[workflow_run][status]" => "status" 
      "[workflow_run][conclusion]" => "conclusion" 
      "[workflow_run][id]" => "run_id"
      "[workflow_run][created_at]" => "created_at"
      "[workflow_run][run_started_at]" => "run_started_at"
      "[workflow_run][event]" => "event"
      "[workflow_run][actor][login]" => "actor"
    }
  }
  mutate {
    lowercase => [ "owner", "repo" ]
    remove_field => [
      "workflow_run",
      "workflow",
      "repository", 
      "organization", 
      "enterprise",
      "sender",
      "action",
      "headers"
    ]
  }
  mutate {
    rename => {"repo" => "repository"}
  }
  mutate {
    add_field => { 
      "[@metadata][target_index]" => "github.workflow.%{[owner]}.%{[repository]}.%{[workflow_id]}" 
      "[@metadata][document_id]" => "%{[workflow_id]}-%{[run_id]}" 
      "[fullname]" => "%{[name]} in %{[owner]}/%{[repository]}" 
    }
  }
}
output {   
  pipeline { send_to => ["elastic_output"] }
}