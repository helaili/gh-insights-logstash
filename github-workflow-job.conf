input {
  pipeline { address => "workflow_job" }
}
filter {
  if [action] != "completed" { 
    drop { }
  }
  ruby {
    code => "
      completed_at = (Time.parse(event.get('[workflow_job][completed_at]')).to_f).floor
      created_at = (Time.parse(event.get('[workflow_job][created_at]')).to_f).floor
      started_at = (Time.parse(event.get('[workflow_job][started_at]')).to_f).floor
      event.set('total_duration', completed_at - created_at)
      event.set('execution_duration', completed_at - started_at)
    "
  }
  mutate {
    copy => {
      "[repository][owner][login]" => "owner"
      "[repository][name]" => "repo"
      "[workflow_job][id]" => "job_id"
      "[workflow_job][run_id]" => "run_id"
      "[workflow_job][name]" => "name"
      "[workflow_job][status]" => "status" 
      "[workflow_job][conclusion]" => "conclusion" 
      "[workflow_job][created_at]" => "created_at"
      "[workflow_job][started_at]" => "started_at"
      "[workflow_job][completed_at]" => "completed_at"
      "[workflow_job][runner_name]" => "runner_name"
      "[workflow_job][runner_group_name]" => "runner_group_name"
    }
  }
  mutate {
    lowercase => [ "owner", "repo" ]
    remove_field => [
      "workflow_job",
      "repository", 
      "deployment", 
      "organization", 
      "enterprise",
      "sender",
      "action",
      "headers"
    ]
  }
  mutate {
    rename => {"repo" => "repository"}
  }
  elasticsearch {
    hosts => ["https://octoalainfree-2.local:9200"]
    user => "elastic"
    password => "oYt__ZYoWWPhpTkt09TN"
    ssl_certificate_authorities => ["/Users/helaili/devtools/elasticsearch-8.8.1/config/certs/http_ca.crt"]
    index => "github.workflow.%{[owner]}.%{[repository]}.*"
    query_template => "config/workflow-query.json"
    fields => { "workflow_id" => "workflow_id" }
  }
  mutate {
    coerce => { "workflow_id" => "null_value" }
  }
  mutate {
    add_field => { 
      "[@metadata][target_index]" => "github.workflow.%{[owner]}.%{[repository]}.%{[workflow_id]}.jobs" 
      "[@metadata][document_id]" => "%{[workflow_id]}-%{[run_id]}-%{[job_id]}" 
    }
  }
}
output {   
  stdout { codec => rubydebug }
  if [workflow_id] != "null_value" {
    pipeline { send_to => ["elastic_output"] }
  }
}